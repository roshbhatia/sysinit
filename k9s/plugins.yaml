plugins:
  xplane-beta-trace:
    shortCut: Ctrl-B
    confirm: false
    description: "Crossplane Beta Trace"
    scopes:
      - nrfruntimes
    command: sh
    background: false
    args:
      - -c
      - >-
        watch -n .5 "crossplane beta trace 
        $RESOURCE_NAME.$RESOURCE_GROUP 
        -o wide 
        --show-package-runtime-configs 
        -n $NAMESPACE
        $NAME 
        | bat -"

  force-argo-app-sync:
      shortCut: Ctrl-F
      confirm: true
      description: "Hard Refresh and Sync"
      scopes:
        - applications
      command: sh
      background: true
      args:
        - -c
        - >-
          kubectl patch $RESOURCE_NAME $NAME
          --context $CONTEXT
          --namespace $NAMESPACE
          --type merge
          -p '{"spec":{"operation":{"initiatedBy":{"username":"$USER"},"sync":{"syncStrategy":{"hook":{}}}}},"metadata":{"labels":{"argocd.argoproj.io/refresh":"hard"}}}'

  show-argo-app-sync-status:
    shortCut: Ctrl-L
    confirm: false
    description: "Argo CD Application Sync Status"
    scopes:
      - applications
    command: sh
    background: false
    args:
      - -c
      - >-
        watch -n .5 '
          kubectl get applications -n argocd-system $NAME -o json | jq -r "
          . as \$app |
          \"Application Status -- $NAME: \(\$app.status.sync.status)\",
          \"Resources Status:\",
          (\"Kind,Name,Status\",
          (.status.resources[] | 
            [ .kind, .name, .status ] | 
            @csv))" | awk -F\",\" '"'"'{
              if (NR > 2) {
                for (i=1; i<=NF; i++) {
                  gsub(/^"|"$/, "", $i);  # Remove leading and trailing quotes
                  if (length($i) > 30) $i = substr($i, 1, 27) "...";
                  else while (length($i) < 30) $i = $i " ";
                }
                OFS="\t"; print
              } else {
                print $0
              }
            }'"'"''

  view-resource-in-vscode:
    shortCut: v
    description: "View resource in VSCode"
    scopes:
      - all
    command: "sh"
    background: false
    args:
      - "-c"
      - |
        kubectl get $RESOURCE_NAME/$NAME --namespace $NAMESPACE --context $CONTEXT -o yaml | code -