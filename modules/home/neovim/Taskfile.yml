version: '3'

tasks:
  default:
    desc: Show help information
    cmds:
      - task -l
    silent: true
      
  nvim-run-local:
    desc: Run Neovim with local configuration (isolated)
    silent: true
    cmds:
      - |
        TMP_DIR=$(mktemp -d /tmp/nvim-test-XXXXXX)
        mkdir -p $TMP_DIR/share $TMP_DIR/config $TMP_DIR/state $TMP_DIR/cache
        echo "Running Neovim with config from $(pwd)"
        NVIM_APPNAME=nvim-test \
        XDG_DATA_HOME=$TMP_DIR/share \
        XDG_CONFIG_HOME=$TMP_DIR/config \
        XDG_STATE_HOME=$TMP_DIR/state \
        XDG_CACHE_HOME=$TMP_DIR/cache \
        nvim --cmd "set runtimepath^=$(pwd),$(pwd)/lua" -u "$(pwd)/init.lua"
    usage: |
      Run Neovim with the local configuration (isolated environment):
        task nvim-run-local
        
  fetch-readmes:
    desc: Fetch READMEs for all Neovim plugins
    silent: true
    cmds:
      - |
        # Set up colors for output
        RED='\033[0;31m'
        GREEN='\033[0;32m'
        YELLOW='\033[0;33m'
        NC='\033[0m' # No Color
        
        # Define directories
        NEOVIM_DIR="$(pwd)"
        README_DIR="${NEOVIM_DIR}/dependency-readmes"
        
        # Create README directory if it doesn't exist
        mkdir -p "${README_DIR}"
        
        echo -e "${YELLOW}Scanning Lua files for README URLs...${NC}"
        
        # Find all Lua files and process them with awk instead of grep
        find "${NEOVIM_DIR}" -type f -name "*.lua" | while read file; do
          # Use awk to find the line with the URL and extract it
          url=$(awk '/-- sysinit\.nvim\.readme-url=/ { 
            match($0, /"[^"]+"/); 
            url = substr($0, RSTART+1, RLENGTH-2); 
            print url; 
            exit; 
          }' "$file")
          
          if [[ -n "$url" ]]; then
            filename=$(basename "$file" .lua)
            echo -e "${GREEN}Found README URL in ${filename}: ${url}${NC}"
            
            # Download the README
            echo -e "Downloading README from ${url}"
            curl -s "${url}" -o "${README_DIR}/${filename}.md"
            
            if [[ $? -eq 0 ]]; then
              echo -e "${GREEN}Successfully downloaded README for ${filename}${NC}"
            else
              echo -e "${RED}Failed to download README for ${filename}${NC}"
            fi
          fi
        done
        
        # Count the downloaded files
        found=$(find "${README_DIR}" -type f -name "*.md" | wc -l)
        count=$(find "${NEOVIM_DIR}" -type f -name "*.lua" | wc -l)
        
        echo -e "${YELLOW}Scanned ${count} files, found ${found} README URLs${NC}"
        echo -e "${GREEN}READMEs saved to ${README_DIR}${NC}"
    usage: |
      Fetch READMEs for all Neovim plugins:
        task fetch-readmes