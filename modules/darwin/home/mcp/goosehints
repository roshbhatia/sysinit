The following lists various MCP tools you have access to and the conditions in which they should be used.
Sequential Thinking Tool
ALWAYS:

Use sequential_thinking for complex problems requiring multi-step reasoning
Break down problems into explicit numbered thoughts with clear progression
Set nextThoughtNeeded to true when further reasoning steps are required
Revise previous thoughts by setting isRevision to true and identifying the specific thought with revisesThought
Branch reasoning paths using branchFromThought when exploring alternative approaches
Update totalThoughts dynamically if you discover more steps are needed
Track thought numbers and branches meticulously for reasoning clarity

NEVER:

Skip to conclusions without showing intermediate reasoning steps
Leave reasoning chains incomplete or unresolved
Use sequential thinking for simple questions with straightforward answers
Include unnecessary thought steps (be concise while thorough)
Create reasoning branches without clear differentiation or purpose
Fail to revise thoughts when errors or inconsistencies are detected

Context7 Tool
ALWAYS:

Add use context7 at the end of prompts requiring up-to-date documentation
Use Context7 when version-specific information is critical
Request Context7 for programming tasks to ensure accurate API usage
Let Context7 fetch documentation directly from source repositories

NEVER:

Rely on outdated API knowledge when Context7 can provide current information
Switch between tabs manually when Context7 can fetch information automatically
Use hallucinated APIs when Context7 can verify what actually exists
Ignore version compatibility when writing code solutions

Fetch Tool
ALWAYS:

Use fetch to retrieve web content as markdown
Specify max_length to control response size
Use start_index to read lengthy pages in manageable chunks
Set raw to true when original HTML formatting is needed
