version: "3"

vars:
  LOG_DIR: "/tmp/log"
  START_MSG_TEMPLATE: "{{.TASK}}..."
  SUCCESS_MSG_TEMPLATE: "{{.TASK}} completed successfully"

tasks:
  default:
    cmds:
      - task -l
    desc: Show help information
    silent: true

  nix:build:
    vars:
      LOG_FILE: "{{.LOG_DIR}}/sysinit-build.log"
    cmds:
      - |
        #!/usr/bin/env bash
        source hack/lib/logger.sh
        log_info "Building system configuration"
        ensure_dir "$(dirname \"{{.LOG_FILE}}\")"
        ensure_file "{{.LOG_FILE}}"
        follow_log "{{.LOG_FILE}}" &
        if ! sudo darwin-rebuild switch -v --show-trace --impure --flake . > "{{.LOG_FILE}}" 2>&1; then
          log_error "Build failed. Check the log." log_file="{{.LOG_FILE}}"
          exit 1
        fi
        log_success "Build completed successfully"
    desc: Build the configuration without applying
    silent: true

  nix:clean:
    vars:
      LOG_FILE: "{{.LOG_DIR}}/sysinit-clean.log"
    cmds:
      - |
        #!/usr/bin/env bash
        source hack/lib/logger.sh
        log_info "Running garbage collection"
        ensure_dir "$(dirname \"{{.LOG_FILE}}\")"
        ensure_file "{{.LOG_FILE}}"
        follow_log "{{.LOG_FILE}}" &
        if ! sudo nix-collect-garbage -d > "{{.LOG_FILE}}" 2>&1; then
          log_error "Garbage collection failed" log_file="{{.LOG_FILE}}"
          exit 1
        fi
        log_success "Garbage collection completed successfully"
    desc: Run garbage collection
    silent: true

  nix:update:
    vars:
      LOG_FILE: "{{.LOG_DIR}}/sysinit-flake-update.log"
    cmds:
      - |
        #!/usr/bin/env bash
        source hack/lib/logger.sh
        log_info "Updating flake inputs"
        ensure_dir "$(dirname \"{{.LOG_FILE}}\")"
        ensure_file "{{.LOG_FILE}}"
        follow_log "{{.LOG_FILE}}" &
        if ! sudo nix flake update > "{{.LOG_FILE}}" 2>&1; then
          log_error "Flake update failed" log_file="{{.LOG_FILE}}"
          exit 1
        fi
        log_success "Flake inputs updated"
    desc: Update flake inputs
    silent: true

  nix:refresh:
    deps: [nix:update]
    vars:
      LOG_FILE: "{{.LOG_DIR}}/sysinit-refresh.log"
    cmds:
      - |
        #!/usr/bin/env bash
        source hack/lib/logger.sh
        log_info "Applying system configuration"
        ensure_dir "$(dirname \"{{.LOG_FILE}}\")"
        ensure_file "{{.LOG_FILE}}"
        follow_log "{{.LOG_FILE}}" &
        if ! sudo darwin-rebuild switch --flake . --show-trace > "{{.LOG_FILE}}" 2>&1; then
          log_error "Refresh failed. Check the log" log_file="{{.LOG_FILE}}"
          exit 1
        fi
        log_success "System configuration applied successfully"
    desc: Apply the system configuration
    silent: true

  nix:refresh:work:
    vars:
      LOG_FILE: "{{.LOG_DIR}}/work-refresh.log"
    cmds:
      - |
        #!/usr/bin/env bash
        source hack/lib/logger.sh
        log_info "Refreshing work configuration"
        ensure_dir "$(dirname \"{{.LOG_FILE}}\")"
        ensure_file "{{.LOG_FILE}}"
        follow_log "{{.LOG_FILE}}" &
        WORK_SYSINIT=$(find ~/github/work -maxdepth 2 -type d -name "sysinit" 2>/dev/null | head -n 1)
        if [ -z "${WORK_SYSINIT}" ]; then
          log_error "Could not find work sysinit repository"
          exit 1
        fi
        cd "${WORK_SYSINIT}"
        if ! task nix:refresh > "{{.LOG_FILE}}" 2>&1; then
          log_error "Work refresh failed. Check the log" log_file="{{.LOG_FILE}}"
          exit 1
        fi
        log_success "Work configuration refreshed successfully"
    desc: Update and rebuild work sysinit configuration
    silent: true

