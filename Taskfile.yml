version: "3"

vars:
  SCRIPT_HEADER: |
    #!/usr/bin/env bash
    source ./hack/lib/logger.sh
    UUID=$(uuidgen)
    log_info "Task ID: $UUID"
  LOG_DIR: "/tmp/log"
  LOG_PREFIX: "{{UUID}}-sysinit"
  START_MSG_TEMPLATE: "{{.TASK}}..."
  SUCCESS_MSG_TEMPLATE: "{{.TASK}} completed successfully"
  ERROR_TEMPLATE: |
    log_error "Failed. See log: ${LOG_FILE}"
    exit 1

tasks:
  default:
    cmds:
      - task -l
    desc: Show help information
    silent: true

  nix:build:
    vars:
      TASK: "Building system configuration"
      LOG_FILE: "{{.LOG_DIR}}/{{.LOG_PREFIX}}-build.log"
    cmds:
      - |
        {{.SCRIPT_HEADER}}
        log_info "{{.START_MSG_TEMPLATE}}"
        mkdir -p "$(dirname \"${LOG_FILE}\")"
        touch "${LOG_FILE}"
        tail -f "${LOG_FILE}" | bat --paging=never -l log
        if ! sudo darwin-rebuild switch -v --show-trace --impure --flake . > "${LOG_FILE}" 2>&1; then
          {{.ERROR_TEMPLATE}}
        fi
        log_info "Log file: ${LOG_FILE}"
        log_success "{{.SUCCESS_MSG_TEMPLATE}}"
    desc: Build the configuration without applying
    silent: true

  nix:clean:
    vars:
      TASK: "Running garbage collection"
      LOG_FILE: "{{.LOG_DIR}}/{{.LOG_PREFIX}}-clean.log"
    cmds:
      - |
        {{.SCRIPT_HEADER}}
        log_info "{{.START_MSG_TEMPLATE}}"
        mkdir -p "$(dirname \"${LOG_FILE}\")"
        touch "${LOG_FILE}"
        tail -f "${LOG_FILE}" | bat --paging=never -l log
        if ! sudo nix-collect-garbage -d > "${LOG_FILE}" 2>&1; then
          {{.ERROR_TEMPLATE}}
        fi
        log_info "Log file: ${LOG_FILE}"
        log_success "{{.SUCCESS_MSG_TEMPLATE}}"
    desc: Run garbage collection
    silent: true

  nix:update:flake:
    vars:
      TASK: "Updating flake inputs"
      LOG_FILE: "{{.LOG_DIR}}/{{.LOG_PREFIX}}-flake-update.log"
    cmds:
      - |
        {{.SCRIPT_HEADER}}
        log_info "{{.START_MSG_TEMPLATE}}"
        mkdir -p "$(dirname \"${LOG_FILE}\")"
        touch "${LOG_FILE}"
        tail -f "${LOG_FILE}" | bat --paging=never -l log
        if ! sudo nix flake update > "${LOG_FILE}" 2>&1; then
          {{.ERROR_TEMPLATE}}
        fi
        log_info "Log file: ${LOG_FILE}"
        log_success "{{.SUCCESS_MSG_TEMPLATE}}"
    desc: Update flake inputs
    silent: true

  nix:refresh:
    deps: [nix:update:flake]
    vars:
      TASK: "Applying system configuration"
      LOG_FILE: "{{.LOG_DIR}}/{{.LOG_PREFIX}}-refresh.log"
    cmds:
      - |
        {{.SCRIPT_HEADER}}
        log_info "{{.START_MSG_TEMPLATE}}"
        mkdir -p "$(dirname \"${LOG_FILE}\")"
        touch "${LOG_FILE}"
        tail -f "${LOG_FILE}" | bat --paging=never -l log
        if ! sudo darwin-rebuild switch --flake . --show-trace > "${LOG_FILE}" 2>&1; then
          {{.ERROR_TEMPLATE}}
        fi
        log_info "Log file: ${LOG_FILE}"
        log_success "{{.SUCCESS_MSG_TEMPLATE}}"
    desc: Apply the system configuration
    silent: true

  nvim:run-local-headless-isolated:
    cmds:
      - task -d modules/darwin/home/neovim nvim:run-local-headless-isolated
    silent: true

  nvim:run-local-isolated:
    cmds:
      - task -d modules/darwin/home/neovim nvim:run-local-isolated
    silent: true
