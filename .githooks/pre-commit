#!/usr/bin/env bash
set -euo pipefail

log_info() { echo -e "\033[0;34m[INFO]\033[0m $*"; }
log_warn() { echo -e "\033[1;33m[WARN]\033[0m $*" >&2; }
log_error() { echo -e "\033[1;31m[ERROR]\033[0m $*" >&2; }
log_success() { echo -e "\033[0;32m[SUCCESS]\033[0m $*"; }

check_command() {
  command -v "$1" >/dev/null 2>&1
}

if ! check_command "task"; then
  log_warn "task not found, skipping hooks"
  exit 0
fi

for cmd in "nixfmt" "stylua" "deadnix"; do
  if ! check_command "$cmd"; then
    log_warn "$cmd not found, skipping hooks"
    exit 0
  fi
done

log_info "Checking and fixing line endings..."
staged_files=$(git diff --cached --name-only --diff-filter=ACM)
files_fixed=0

log_info "Checking for dead Nix code..."
nix_files=$(find . -name "*.nix" -type f | grep -v result | head -20)
if [ -n "$nix_files" ]; then
  echo "$nix_files" | xargs deadnix --edit

  if ! git diff --quiet --exit-code -- "*.nix"; then
    log_warn "deadnix found and removed dead code. Please review and commit the changes."
    log_info "Modified files:"
    git diff --name-only -- "*.nix"
    exit 1
  fi
fi

log_info "Running formatting tasks..."
task fmt sh:chmod

log_info "Regenerating values.nix docs..."
task docs:values

log_info "Enforcing ownership..."
if [ "$(id -u)" -eq 0 ]; then
  if [ -n "${SUDO_USER:-}" ]; then
    log_info "Running as root, changing ownership to $SUDO_USER"
    chown -R "$SUDO_USER" .
  else
    log_info "Running as root, no SUDO_USER set, skipping chown"
  fi
else
  log_info "Changing ownership to $USER"
  chown -R "$USER" .
fi

log_success "Pre-commit checks passed!"
